from pyquil import Program, get_qc
from pyquil.gates import H, RZ, CNOT, MEASURE
from functools import reduce
import numpy as np

shots = 1024

p = Program()

ro = p.declare('ro', memory_type='BIT', memory_size=130)

p.inst(H(0))
p.inst(H(1))
p.inst(H(2))
p.inst(H(3))
p.inst(H(4))
p.inst(H(5))
p.inst(H(6))
p.inst(H(7))
p.inst(H(8))
p.inst(H(9))
p.inst(H(10))
p.inst(H(11))
p.inst(H(12))
p.inst(H(13))
p.inst(H(14))
p.inst(H(15))
p.inst(H(16))
p.inst(H(17))
p.inst(H(18))
p.inst(H(19))
p.inst(H(20))
p.inst(H(21))
p.inst(H(22))
p.inst(H(23))
p.inst(H(24))
p.inst(H(25))
p.inst(H(26))
p.inst(H(27))
p.inst(H(28))
p.inst(H(29))
p.inst(H(30))
p.inst(H(31))
p.inst(H(32))
p.inst(H(33))
p.inst(H(34))
p.inst(H(35))
p.inst(H(36))
p.inst(H(37))
p.inst(H(38))
p.inst(H(39))
p.inst(H(40))
p.inst(H(41))
p.inst(H(42))
p.inst(H(43))
p.inst(H(44))
p.inst(H(45))
p.inst(H(46))
p.inst(H(47))
p.inst(H(48))
p.inst(H(49))
p.inst(H(50))
p.inst(H(51))
p.inst(H(52))
p.inst(H(53))
p.inst(H(54))
p.inst(H(55))
p.inst(H(56))
p.inst(H(57))
p.inst(H(58))
p.inst(H(59))
p.inst(H(60))
p.inst(H(61))
p.inst(H(62))
p.inst(H(63))
p.inst(H(64))
p.inst(RZ(0.69637877, 0))
p.inst(RZ(-0.69637877, 1))
p.inst(RZ(-0.27302102, 2))
p.inst(RZ(0.27302102, 3))
p.inst(RZ(0.93575124, 4))
p.inst(RZ(-0.93575124, 5))
p.inst(RZ(-0.79244696, 6))
p.inst(RZ(0.79244696, 7))
p.inst(RZ(-0.45987014, 8))
p.inst(RZ(0.45987014, 9))
p.inst(RZ(-0.66887293, 10))
p.inst(RZ(0.66887293, 11))
p.inst(RZ(0.26174741, 12))
p.inst(RZ(-0.26174741, 13))
p.inst(RZ(-0.95258407, 14))
p.inst(RZ(0.95258407, 15))
p.inst(RZ(0.90853417, 16))
p.inst(RZ(-0.90853417, 17))
p.inst(RZ(-1.998859, 18))
p.inst(RZ(1.998859, 19))
p.inst(RZ(1.7129122, 20))
p.inst(RZ(-1.7129122, 21))
p.inst(RZ(1.713981, 22))
p.inst(RZ(-1.713981, 23))
p.inst(RZ(1.9973678, 24))
p.inst(RZ(-1.9973678, 25))
p.inst(RZ(1.2910342, 26))
p.inst(RZ(-1.2910342, 27))
p.inst(RZ(1.4634312, 28))
p.inst(RZ(-1.4634312, 29))
p.inst(RZ(0.65619548, 30))
p.inst(RZ(-0.65619548, 31))
p.inst(RZ(1.1369534, 32))
p.inst(RZ(-1.1369534, 33))
p.inst(RZ(-0.3166508, 34))
p.inst(RZ(0.3166508, 35))
p.inst(RZ(1.6679692, 36))
p.inst(RZ(-1.6679692, 37))
p.inst(RZ(0.94889695, 38))
p.inst(RZ(-0.94889695, 39))
p.inst(RZ(1.3389506, 40))
p.inst(RZ(-1.3389506, 41))
p.inst(RZ(0.42250814, 42))
p.inst(RZ(-0.42250814, 43))
p.inst(RZ(-0.16700096, 44))
p.inst(RZ(0.16700096, 45))
p.inst(RZ(1.3028807, 46))
p.inst(RZ(-1.3028807, 47))
p.inst(RZ(-1.8720307, 48))
p.inst(RZ(1.8720307, 49))
p.inst(RZ(-1.1861875, 50))
p.inst(RZ(1.1861875, 51))
p.inst(RZ(-0.11663793, 52))
p.inst(RZ(0.11663793, 53))
p.inst(RZ(1.7434165, 54))
p.inst(RZ(-1.7434165, 55))
p.inst(RZ(1.9586679, 56))
p.inst(RZ(-1.9586679, 57))
p.inst(RZ(-0.91863643, 58))
p.inst(RZ(0.91863643, 59))
p.inst(RZ(-1.378703, 60))
p.inst(RZ(1.378703, 61))
p.inst(RZ(1.2285706, 62))
p.inst(RZ(-1.2285706, 63))
p.inst(RZ(-1.0753497, 64))
p.inst(RZ(-0.69637877, 1))
p.inst(RZ(0.27302102, 3))
p.inst(RZ(-0.93575124, 5))
p.inst(RZ(0.79244696, 7))
p.inst(RZ(0.45987014, 9))
p.inst(RZ(0.66887293, 11))
p.inst(RZ(-0.26174741, 13))
p.inst(RZ(0.95258407, 15))
p.inst(RZ(-0.90853417, 17))
p.inst(RZ(1.998859, 19))
p.inst(RZ(-1.7129122, 21))
p.inst(RZ(-1.713981, 23))
p.inst(RZ(-1.9973678, 25))
p.inst(RZ(-1.2910342, 27))
p.inst(RZ(-1.4634312, 29))
p.inst(RZ(-0.65619548, 31))
p.inst(RZ(-1.1369534, 33))
p.inst(RZ(0.3166508, 35))
p.inst(RZ(-1.6679692, 37))
p.inst(RZ(-0.94889695, 39))
p.inst(RZ(-1.3389506, 41))
p.inst(RZ(-0.42250814, 43))
p.inst(RZ(0.16700096, 45))
p.inst(RZ(-1.3028807, 47))
p.inst(RZ(1.8720307, 49))
p.inst(RZ(1.1861875, 51))
p.inst(RZ(0.11663793, 53))
p.inst(RZ(-1.7434165, 55))
p.inst(RZ(-1.9586679, 57))
p.inst(RZ(0.91863643, 59))
p.inst(RZ(1.378703, 61))
p.inst(RZ(-1.2285706, 63))
p.inst(RZ(-1.0753497, 64))
p.inst(CNOT(0, 1))
p.inst(CNOT(2, 3))
p.inst(CNOT(4, 5))
p.inst(CNOT(6, 7))
p.inst(CNOT(8, 9))
p.inst(CNOT(10, 11))
p.inst(CNOT(12, 13))
p.inst(CNOT(14, 15))
p.inst(CNOT(16, 17))
p.inst(CNOT(18, 19))
p.inst(CNOT(20, 21))
p.inst(CNOT(22, 23))
p.inst(CNOT(24, 25))
p.inst(CNOT(26, 27))
p.inst(CNOT(28, 29))
p.inst(CNOT(30, 31))
p.inst(CNOT(32, 33))
p.inst(CNOT(34, 35))
p.inst(CNOT(36, 37))
p.inst(CNOT(38, 39))
p.inst(CNOT(40, 41))
p.inst(CNOT(42, 43))
p.inst(CNOT(44, 45))
p.inst(CNOT(46, 47))
p.inst(CNOT(48, 49))
p.inst(CNOT(50, 51))
p.inst(CNOT(52, 53))
p.inst(CNOT(54, 55))
p.inst(CNOT(56, 57))
p.inst(CNOT(58, 59))
p.inst(CNOT(60, 61))
p.inst(CNOT(62, 63))
p.inst(RZ(0.69637877, 1))
p.inst(RZ(-0.27302102, 3))
p.inst(RZ(0.93575124, 5))
p.inst(RZ(-0.79244696, 7))
p.inst(RZ(-0.45987014, 9))
p.inst(RZ(-0.66887293, 11))
p.inst(RZ(0.26174741, 13))
p.inst(RZ(-0.95258407, 15))
p.inst(RZ(0.90853417, 17))
p.inst(RZ(-1.998859, 19))
p.inst(RZ(1.7129122, 21))
p.inst(RZ(1.713981, 23))
p.inst(RZ(1.9973678, 25))
p.inst(RZ(1.2910342, 27))
p.inst(RZ(1.4634312, 29))
p.inst(RZ(0.65619548, 31))
p.inst(RZ(1.1369534, 33))
p.inst(RZ(-0.3166508, 35))
p.inst(RZ(1.6679692, 37))
p.inst(RZ(0.94889695, 39))
p.inst(RZ(1.3389506, 41))
p.inst(RZ(0.42250814, 43))
p.inst(RZ(-0.16700096, 45))
p.inst(RZ(1.3028807, 47))
p.inst(RZ(-1.8720307, 49))
p.inst(RZ(-1.1861875, 51))
p.inst(RZ(-0.11663793, 53))
p.inst(RZ(1.7434165, 55))
p.inst(RZ(1.9586679, 57))
p.inst(RZ(-0.91863643, 59))
p.inst(RZ(-1.378703, 61))
p.inst(RZ(1.2285706, 63))
p.inst(CNOT(0, 1))
p.inst(CNOT(2, 3))
p.inst(CNOT(4, 5))
p.inst(CNOT(6, 7))
p.inst(CNOT(8, 9))
p.inst(CNOT(10, 11))
p.inst(CNOT(12, 13))
p.inst(CNOT(14, 15))
p.inst(CNOT(16, 17))
p.inst(CNOT(18, 19))
p.inst(CNOT(20, 21))
p.inst(CNOT(22, 23))
p.inst(CNOT(24, 25))
p.inst(CNOT(26, 27))
p.inst(CNOT(28, 29))
p.inst(CNOT(30, 31))
p.inst(CNOT(32, 33))
p.inst(CNOT(34, 35))
p.inst(CNOT(36, 37))
p.inst(CNOT(38, 39))
p.inst(CNOT(40, 41))
p.inst(CNOT(42, 43))
p.inst(CNOT(44, 45))
p.inst(CNOT(46, 47))
p.inst(CNOT(48, 49))
p.inst(CNOT(50, 51))
p.inst(CNOT(52, 53))
p.inst(CNOT(54, 55))
p.inst(CNOT(56, 57))
p.inst(CNOT(58, 59))
p.inst(CNOT(60, 61))
p.inst(CNOT(62, 63))
p.inst(H(0))
p.inst(RZ(1.6845551, 1))
p.inst(RZ(-1.6845551, 2))
p.inst(RZ(-1.2572348, 3))
p.inst(RZ(1.2572348, 4))
p.inst(RZ(1.2928823, 5))
p.inst(RZ(-1.2928823, 6))
p.inst(RZ(-1.5703962, 7))
p.inst(RZ(1.5703962, 8))
p.inst(RZ(-1.0388736, 9))
p.inst(RZ(1.0388736, 10))
p.inst(RZ(1.3780137, 11))
p.inst(RZ(-1.3780137, 12))
p.inst(RZ(-0.0070144794, 13))
p.inst(RZ(0.0070144794, 14))
p.inst(RZ(-1.3439775, 15))
p.inst(RZ(1.3439775, 16))
p.inst(RZ(1.7769919, 17))
p.inst(RZ(-1.7769919, 18))
p.inst(RZ(-1.532035, 19))
p.inst(RZ(1.532035, 20))
p.inst(RZ(-1.4790855, 21))
p.inst(RZ(1.4790855, 22))
p.inst(RZ(1.6621023, 23))
p.inst(RZ(-1.6621023, 24))
p.inst(RZ(-1.346359, 25))
p.inst(RZ(1.346359, 26))
p.inst(RZ(1.2437046, 27))
p.inst(RZ(-1.2437046, 28))
p.inst(RZ(-1.4035615, 29))
p.inst(RZ(1.4035615, 30))
p.inst(RZ(-0.94399531, 31))
p.inst(RZ(0.94399531, 32))
p.inst(RZ(-0.10547849, 33))
p.inst(RZ(0.10547849, 34))
p.inst(RZ(-0.32112909, 35))
p.inst(RZ(0.32112909, 36))
p.inst(RZ(1.2551978, 37))
p.inst(RZ(-1.2551978, 38))
p.inst(RZ(0.83274755, 39))
p.inst(RZ(-0.83274755, 40))
p.inst(RZ(-0.51687854, 41))
p.inst(RZ(0.51687854, 42))
p.inst(RZ(-1.6689561, 43))
p.inst(RZ(1.6689561, 44))
p.inst(RZ(-0.87783496, 45))
p.inst(RZ(0.87783496, 46))
p.inst(RZ(1.7917125, 47))
p.inst(RZ(-1.7917125, 48))
p.inst(RZ(0.85318811, 49))
p.inst(RZ(-0.85318811, 50))
p.inst(RZ(1.1007048, 51))
p.inst(RZ(-1.1007048, 52))
p.inst(RZ(1.2374139, 53))
p.inst(RZ(-1.2374139, 54))
p.inst(RZ(0.86900691, 55))
p.inst(RZ(-0.86900691, 56))
p.inst(RZ(-0.075544295, 57))
p.inst(RZ(0.075544295, 58))
p.inst(RZ(1.9666965, 59))
p.inst(RZ(-1.9666965, 60))
p.inst(RZ(-0.8932567, 61))
p.inst(RZ(0.8932567, 62))
p.inst(RZ(1.0753497, 63))
p.inst(RZ(0, 0))
p.inst(RZ(-1.6845551, 2))
p.inst(RZ(1.2572348, 4))
p.inst(RZ(-1.2928823, 6))
p.inst(RZ(1.5703962, 8))
p.inst(RZ(1.0388736, 10))
p.inst(RZ(-1.3780137, 12))
p.inst(RZ(0.0070144794, 14))
p.inst(RZ(1.3439775, 16))
p.inst(RZ(-1.7769919, 18))
p.inst(RZ(1.532035, 20))
p.inst(RZ(1.4790855, 22))
p.inst(RZ(-1.6621023, 24))
p.inst(RZ(1.346359, 26))
p.inst(RZ(-1.2437046, 28))
p.inst(RZ(1.4035615, 30))
p.inst(RZ(0.94399531, 32))
p.inst(RZ(0.10547849, 34))
p.inst(RZ(0.32112909, 36))
p.inst(RZ(-1.2551978, 38))
p.inst(RZ(-0.83274755, 40))
p.inst(RZ(0.51687854, 42))
p.inst(RZ(1.6689561, 44))
p.inst(RZ(0.87783496, 46))
p.inst(RZ(-1.7917125, 48))
p.inst(RZ(-0.85318811, 50))
p.inst(RZ(-1.1007048, 52))
p.inst(RZ(-1.2374139, 54))
p.inst(RZ(-0.86900691, 56))
p.inst(RZ(0.075544295, 58))
p.inst(RZ(-1.9666965, 60))
p.inst(RZ(0.8932567, 62))
p.inst(CNOT(63, 64))
p.inst(H(0))
p.inst(CNOT(1, 2))
p.inst(CNOT(3, 4))
p.inst(CNOT(5, 6))
p.inst(CNOT(7, 8))
p.inst(CNOT(9, 10))
p.inst(CNOT(11, 12))
p.inst(CNOT(13, 14))
p.inst(CNOT(15, 16))
p.inst(CNOT(17, 18))
p.inst(CNOT(19, 20))
p.inst(CNOT(21, 22))
p.inst(CNOT(23, 24))
p.inst(CNOT(25, 26))
p.inst(CNOT(27, 28))
p.inst(CNOT(29, 30))
p.inst(CNOT(31, 32))
p.inst(CNOT(33, 34))
p.inst(CNOT(35, 36))
p.inst(CNOT(37, 38))
p.inst(CNOT(39, 40))
p.inst(CNOT(41, 42))
p.inst(CNOT(43, 44))
p.inst(CNOT(45, 46))
p.inst(CNOT(47, 48))
p.inst(CNOT(49, 50))
p.inst(CNOT(51, 52))
p.inst(CNOT(53, 54))
p.inst(CNOT(55, 56))
p.inst(CNOT(57, 58))
p.inst(CNOT(59, 60))
p.inst(CNOT(61, 62))
p.inst(RZ(1.0753497, 64))
p.inst(RZ(0, 0))
p.inst(RZ(1.6845551, 2))
p.inst(RZ(-1.2572348, 4))
p.inst(RZ(1.2928823, 6))
p.inst(RZ(-1.5703962, 8))
p.inst(RZ(-1.0388736, 10))
p.inst(RZ(1.3780137, 12))
p.inst(RZ(-0.0070144794, 14))
p.inst(RZ(-1.3439775, 16))
p.inst(RZ(1.7769919, 18))
p.inst(RZ(-1.532035, 20))
p.inst(RZ(-1.4790855, 22))
p.inst(RZ(1.6621023, 24))
p.inst(RZ(-1.346359, 26))
p.inst(RZ(1.2437046, 28))
p.inst(RZ(-1.4035615, 30))
p.inst(RZ(-0.94399531, 32))
p.inst(RZ(-0.10547849, 34))
p.inst(RZ(-0.32112909, 36))
p.inst(RZ(1.2551978, 38))
p.inst(RZ(0.83274755, 40))
p.inst(RZ(-0.51687854, 42))
p.inst(RZ(-1.6689561, 44))
p.inst(RZ(-0.87783496, 46))
p.inst(RZ(1.7917125, 48))
p.inst(RZ(0.85318811, 50))
p.inst(RZ(1.1007048, 52))
p.inst(RZ(1.2374139, 54))
p.inst(RZ(0.86900691, 56))
p.inst(RZ(-0.075544295, 58))
p.inst(RZ(1.9666965, 60))
p.inst(RZ(-0.8932567, 62))
p.inst(CNOT(63, 64))
p.inst(CNOT(1, 2))
p.inst(CNOT(3, 4))
p.inst(CNOT(5, 6))
p.inst(CNOT(7, 8))
p.inst(CNOT(9, 10))
p.inst(CNOT(11, 12))
p.inst(CNOT(13, 14))
p.inst(CNOT(15, 16))
p.inst(CNOT(17, 18))
p.inst(CNOT(19, 20))
p.inst(CNOT(21, 22))
p.inst(CNOT(23, 24))
p.inst(CNOT(25, 26))
p.inst(CNOT(27, 28))
p.inst(CNOT(29, 30))
p.inst(CNOT(31, 32))
p.inst(CNOT(33, 34))
p.inst(CNOT(35, 36))
p.inst(CNOT(37, 38))
p.inst(CNOT(39, 40))
p.inst(CNOT(41, 42))
p.inst(CNOT(43, 44))
p.inst(CNOT(45, 46))
p.inst(CNOT(47, 48))
p.inst(CNOT(49, 50))
p.inst(CNOT(51, 52))
p.inst(CNOT(53, 54))
p.inst(CNOT(55, 56))
p.inst(CNOT(57, 58))
p.inst(CNOT(59, 60))
p.inst(CNOT(61, 62))
p.inst(H(63))
p.inst(H(64))
p.inst(H(1))
p.inst(H(2))
p.inst(H(3))
p.inst(H(4))
p.inst(H(5))
p.inst(H(6))
p.inst(H(7))
p.inst(H(8))
p.inst(H(9))
p.inst(H(10))
p.inst(H(11))
p.inst(H(12))
p.inst(H(13))
p.inst(H(14))
p.inst(H(15))
p.inst(H(16))
p.inst(H(17))
p.inst(H(18))
p.inst(H(19))
p.inst(H(20))
p.inst(H(21))
p.inst(H(22))
p.inst(H(23))
p.inst(H(24))
p.inst(H(25))
p.inst(H(26))
p.inst(H(27))
p.inst(H(28))
p.inst(H(29))
p.inst(H(30))
p.inst(H(31))
p.inst(H(32))
p.inst(H(33))
p.inst(H(34))
p.inst(H(35))
p.inst(H(36))
p.inst(H(37))
p.inst(H(38))
p.inst(H(39))
p.inst(H(40))
p.inst(H(41))
p.inst(H(42))
p.inst(H(43))
p.inst(H(44))
p.inst(H(45))
p.inst(H(46))
p.inst(H(47))
p.inst(H(48))
p.inst(H(49))
p.inst(H(50))
p.inst(H(51))
p.inst(H(52))
p.inst(H(53))
p.inst(H(54))
p.inst(H(55))
p.inst(H(56))
p.inst(H(57))
p.inst(H(58))
p.inst(H(59))
p.inst(H(60))
p.inst(H(61))
p.inst(H(62))
p.inst(RZ(0, 63))
p.inst(RZ(0, 64))
p.inst(RZ(0, 1))
p.inst(RZ(0, 2))
p.inst(RZ(0, 3))
p.inst(RZ(0, 4))
p.inst(RZ(0, 5))
p.inst(RZ(0, 6))
p.inst(RZ(0, 7))
p.inst(RZ(0, 8))
p.inst(RZ(0, 9))
p.inst(RZ(0, 10))
p.inst(RZ(0, 11))
p.inst(RZ(0, 12))
p.inst(RZ(0, 13))
p.inst(RZ(0, 14))
p.inst(RZ(0, 15))
p.inst(RZ(0, 16))
p.inst(RZ(0, 17))
p.inst(RZ(0, 18))
p.inst(RZ(0, 19))
p.inst(RZ(0, 20))
p.inst(RZ(0, 21))
p.inst(RZ(0, 22))
p.inst(RZ(0, 23))
p.inst(RZ(0, 24))
p.inst(RZ(0, 25))
p.inst(RZ(0, 26))
p.inst(RZ(0, 27))
p.inst(RZ(0, 28))
p.inst(RZ(0, 29))
p.inst(RZ(0, 30))
p.inst(RZ(0, 31))
p.inst(RZ(0, 32))
p.inst(RZ(0, 33))
p.inst(RZ(0, 34))
p.inst(RZ(0, 35))
p.inst(RZ(0, 36))
p.inst(RZ(0, 37))
p.inst(RZ(0, 38))
p.inst(RZ(0, 39))
p.inst(RZ(0, 40))
p.inst(RZ(0, 41))
p.inst(RZ(0, 42))
p.inst(RZ(0, 43))
p.inst(RZ(0, 44))
p.inst(RZ(0, 45))
p.inst(RZ(0, 46))
p.inst(RZ(0, 47))
p.inst(RZ(0, 48))
p.inst(RZ(0, 49))
p.inst(RZ(0, 50))
p.inst(RZ(0, 51))
p.inst(RZ(0, 52))
p.inst(RZ(0, 53))
p.inst(RZ(0, 54))
p.inst(RZ(0, 55))
p.inst(RZ(0, 56))
p.inst(RZ(0, 57))
p.inst(RZ(0, 58))
p.inst(RZ(0, 59))
p.inst(RZ(0, 60))
p.inst(RZ(0, 61))
p.inst(RZ(0, 62))
p.inst(H(63))
p.inst(H(64))
p.inst(H(1))
p.inst(H(2))
p.inst(H(3))
p.inst(H(4))
p.inst(H(5))
p.inst(H(6))
p.inst(H(7))
p.inst(H(8))
p.inst(H(9))
p.inst(H(10))
p.inst(H(11))
p.inst(H(12))
p.inst(H(13))
p.inst(H(14))
p.inst(H(15))
p.inst(H(16))
p.inst(H(17))
p.inst(H(18))
p.inst(H(19))
p.inst(H(20))
p.inst(H(21))
p.inst(H(22))
p.inst(H(23))
p.inst(H(24))
p.inst(H(25))
p.inst(H(26))
p.inst(H(27))
p.inst(H(28))
p.inst(H(29))
p.inst(H(30))
p.inst(H(31))
p.inst(H(32))
p.inst(H(33))
p.inst(H(34))
p.inst(H(35))
p.inst(H(36))
p.inst(H(37))
p.inst(H(38))
p.inst(H(39))
p.inst(H(40))
p.inst(H(41))
p.inst(H(42))
p.inst(H(43))
p.inst(H(44))
p.inst(H(45))
p.inst(H(46))
p.inst(H(47))
p.inst(H(48))
p.inst(H(49))
p.inst(H(50))
p.inst(H(51))
p.inst(H(52))
p.inst(H(53))
p.inst(H(54))
p.inst(H(55))
p.inst(H(56))
p.inst(H(57))
p.inst(H(58))
p.inst(H(59))
p.inst(H(60))
p.inst(H(61))
p.inst(H(62))
p.inst(RZ(0, 63))
p.inst(RZ(0, 64))
p.inst(RZ(0, 1))
p.inst(RZ(0, 2))
p.inst(RZ(0, 3))
p.inst(RZ(0, 4))
p.inst(RZ(0, 5))
p.inst(RZ(0, 6))
p.inst(RZ(0, 7))
p.inst(RZ(0, 8))
p.inst(RZ(0, 9))
p.inst(RZ(0, 10))
p.inst(RZ(0, 11))
p.inst(RZ(0, 12))
p.inst(RZ(0, 13))
p.inst(RZ(0, 14))
p.inst(RZ(0, 15))
p.inst(RZ(0, 16))
p.inst(RZ(0, 17))
p.inst(RZ(0, 18))
p.inst(RZ(0, 19))
p.inst(RZ(0, 20))
p.inst(RZ(0, 21))
p.inst(RZ(0, 22))
p.inst(RZ(0, 23))
p.inst(RZ(0, 24))
p.inst(RZ(0, 25))
p.inst(RZ(0, 26))
p.inst(RZ(0, 27))
p.inst(RZ(0, 28))
p.inst(RZ(0, 29))
p.inst(RZ(0, 30))
p.inst(RZ(0, 31))
p.inst(RZ(0, 32))
p.inst(RZ(0, 33))
p.inst(RZ(0, 34))
p.inst(RZ(0, 35))
p.inst(RZ(0, 36))
p.inst(RZ(0, 37))
p.inst(RZ(0, 38))
p.inst(RZ(0, 39))
p.inst(RZ(0, 40))
p.inst(RZ(0, 41))
p.inst(RZ(0, 42))
p.inst(RZ(0, 43))
p.inst(RZ(0, 44))
p.inst(RZ(0, 45))
p.inst(RZ(0, 46))
p.inst(RZ(0, 47))
p.inst(RZ(0, 48))
p.inst(RZ(0, 49))
p.inst(RZ(0, 50))
p.inst(RZ(0, 51))
p.inst(RZ(0, 52))
p.inst(RZ(0, 53))
p.inst(RZ(0, 54))
p.inst(RZ(0, 55))
p.inst(RZ(0, 56))
p.inst(RZ(0, 57))
p.inst(RZ(0, 58))
p.inst(RZ(0, 59))
p.inst(RZ(0, 60))
p.inst(RZ(0, 61))
p.inst(RZ(0, 62))
p.inst(MEASURE(0, ro[65]))
p.inst(MEASURE(1, ro[66]))
p.inst(MEASURE(2, ro[67]))
p.inst(MEASURE(3, ro[68]))
p.inst(MEASURE(4, ro[69]))
p.inst(MEASURE(5, ro[70]))
p.inst(MEASURE(6, ro[71]))
p.inst(MEASURE(7, ro[72]))
p.inst(MEASURE(8, ro[73]))
p.inst(MEASURE(9, ro[74]))
p.inst(MEASURE(10, ro[75]))
p.inst(MEASURE(11, ro[76]))
p.inst(MEASURE(12, ro[77]))
p.inst(MEASURE(13, ro[78]))
p.inst(MEASURE(14, ro[79]))
p.inst(MEASURE(15, ro[80]))
p.inst(MEASURE(16, ro[81]))
p.inst(MEASURE(17, ro[82]))
p.inst(MEASURE(18, ro[83]))
p.inst(MEASURE(19, ro[84]))
p.inst(MEASURE(20, ro[85]))
p.inst(MEASURE(21, ro[86]))
p.inst(MEASURE(22, ro[87]))
p.inst(MEASURE(23, ro[88]))
p.inst(MEASURE(24, ro[89]))
p.inst(MEASURE(25, ro[90]))
p.inst(MEASURE(26, ro[91]))
p.inst(MEASURE(27, ro[92]))
p.inst(MEASURE(28, ro[93]))
p.inst(MEASURE(29, ro[94]))
p.inst(MEASURE(30, ro[95]))
p.inst(MEASURE(31, ro[96]))
p.inst(MEASURE(32, ro[97]))
p.inst(MEASURE(33, ro[98]))
p.inst(MEASURE(34, ro[99]))
p.inst(MEASURE(35, ro[100]))
p.inst(MEASURE(36, ro[101]))
p.inst(MEASURE(37, ro[102]))
p.inst(MEASURE(38, ro[103]))
p.inst(MEASURE(39, ro[104]))
p.inst(MEASURE(40, ro[105]))
p.inst(MEASURE(41, ro[106]))
p.inst(MEASURE(42, ro[107]))
p.inst(MEASURE(43, ro[108]))
p.inst(MEASURE(44, ro[109]))
p.inst(MEASURE(45, ro[110]))
p.inst(MEASURE(46, ro[111]))
p.inst(MEASURE(47, ro[112]))
p.inst(MEASURE(48, ro[113]))
p.inst(MEASURE(49, ro[114]))
p.inst(MEASURE(50, ro[115]))
p.inst(MEASURE(51, ro[116]))
p.inst(MEASURE(52, ro[117]))
p.inst(MEASURE(53, ro[118]))
p.inst(MEASURE(54, ro[119]))
p.inst(MEASURE(55, ro[120]))
p.inst(MEASURE(56, ro[121]))
p.inst(MEASURE(57, ro[122]))
p.inst(MEASURE(58, ro[123]))
p.inst(MEASURE(59, ro[124]))
p.inst(MEASURE(60, ro[125]))
p.inst(MEASURE(61, ro[126]))
p.inst(MEASURE(62, ro[127]))
p.inst(MEASURE(63, ro[128]))
p.inst(MEASURE(64, ro[129]))

p.wrap_in_numshots_loop(shots)

qc = get_qc('65q-qvm')
results_list = qc.run(p)
results = list(map(lambda arr: reduce(lambda x, y: str(x) + str(y), arr[::-1], ""), results_list))
counts = dict(zip(results,[results.count(i) for i in results]))
print(counts)
