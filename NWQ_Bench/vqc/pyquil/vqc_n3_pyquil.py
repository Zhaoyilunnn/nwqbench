from pyquil import Program, get_qc
from pyquil.gates import H, RZ, CNOT, RY, CZ, MEASURE
from functools import reduce
import numpy as np

shots = 1024

p = Program()

ro = p.declare('ro', memory_type='BIT', memory_size=6)

p.inst(H(0))
p.inst(H(1))
p.inst(H(2))
p.inst(RZ(0.84751467, 0))
p.inst(RZ(1.3067611, 1))
p.inst(RZ(2.5281551, 2))
p.inst(CNOT(0, 1))
p.inst(RZ(2.012692, 1))
p.inst(CNOT(0, 1))
p.inst(RY(1.3211686, 0))
p.inst(CNOT(1, 2))
p.inst(RZ(1.0058728, 0))
p.inst(RZ(3.1257781, 2))
p.inst(CNOT(1, 2))
p.inst(RY(2.2279618, 1))
p.inst(RY(0.33699867, 2))
p.inst(RZ(1.2746996, 1))
p.inst(RZ(1.0712587, 2))
p.inst(CZ(0, 1))
p.inst(CZ(0, 2))
p.inst(RY(2.2934377, 0))
p.inst(CZ(1, 2))
p.inst(RZ(1.4841367, 0))
p.inst(RY(1.9225664, 1))
p.inst(RY(1.7857658, 2))
p.inst(RZ(2.4225378, 1))
p.inst(RZ(1.3689008, 2))
p.inst(CZ(0, 1))
p.inst(CZ(0, 2))
p.inst(RY(0.59639646, 0))
p.inst(CZ(1, 2))
p.inst(RZ(1.2541083, 0))
p.inst(RY(2.2665371, 1))
p.inst(RY(0.026092831, 2))
p.inst(RZ(2.4037987, 1))
p.inst(RZ(1.8096955, 2))
p.inst(CZ(0, 1))
p.inst(CZ(0, 2))
p.inst(RY(0.24001234, 0))
p.inst(CZ(1, 2))
p.inst(RZ(2.484556, 0))
p.inst(RY(2.4622526, 1))
p.inst(RY(1.9069715, 2))
p.inst(RZ(0.444765, 1))
p.inst(RZ(1.099548, 2))
p.inst(CZ(0, 1))
p.inst(CZ(0, 2))
p.inst(CZ(1, 2))
p.inst(MEASURE(0, ro[3]))
p.inst(MEASURE(1, ro[4]))
p.inst(MEASURE(2, ro[5]))

p.wrap_in_numshots_loop(shots)

qc = get_qc('3q-qvm')
results_list = qc.run(p)
results = list(map(lambda arr: reduce(lambda x, y: str(x) + str(y), arr[::-1], ""), results_list))
counts = dict(zip(results,[results.count(i) for i in results]))
print(counts)
