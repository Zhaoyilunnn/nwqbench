from pyquil import Program, get_qc
from pyquil.gates import H, RZ, CNOT, RY, CZ, MEASURE
from functools import reduce
import numpy as np

shots = 1024

p = Program()

ro = p.declare('ro', memory_type='BIT', memory_size=30)

p.inst(H(0))
p.inst(H(1))
p.inst(H(2))
p.inst(H(3))
p.inst(H(4))
p.inst(H(5))
p.inst(H(6))
p.inst(H(7))
p.inst(H(8))
p.inst(H(9))
p.inst(H(10))
p.inst(H(11))
p.inst(H(12))
p.inst(H(13))
p.inst(H(14))
p.inst(RZ(2.5156157, 0))
p.inst(RZ(1.5082091, 1))
p.inst(RZ(1.5673957, 2))
p.inst(RZ(2.1229745, 3))
p.inst(RZ(2.4282431, 4))
p.inst(RZ(2.0779625, 5))
p.inst(RZ(2.7516676, 6))
p.inst(RZ(1.3732694, 7))
p.inst(RZ(2.2789478, 8))
p.inst(RZ(0.063588782, 9))
p.inst(RZ(0.17360377, 10))
p.inst(RZ(0.63328891, 11))
p.inst(RZ(0.89650897, 12))
p.inst(RZ(1.8402197, 13))
p.inst(RZ(0.22125055, 14))
p.inst(CNOT(0, 1))
p.inst(RZ(3.0443277, 1))
p.inst(CNOT(0, 1))
p.inst(RY(0.12547023, 0))
p.inst(CNOT(1, 2))
p.inst(RZ(1.1420902, 0))
p.inst(RZ(1.4957737, 2))
p.inst(CNOT(1, 2))
p.inst(RY(1.9749875, 1))
p.inst(CNOT(2, 3))
p.inst(RZ(1.918538, 1))
p.inst(RZ(0.060112245, 3))
p.inst(CZ(0, 1))
p.inst(CNOT(2, 3))
p.inst(RY(0.79520536, 2))
p.inst(CNOT(3, 4))
p.inst(RZ(0.93406507, 2))
p.inst(RZ(2.7879005, 4))
p.inst(CZ(0, 2))
p.inst(CNOT(3, 4))
p.inst(RY(2.8543398, 3))
p.inst(CNOT(4, 5))
p.inst(RZ(0.90663008, 3))
p.inst(RZ(2.0461857, 5))
p.inst(CZ(0, 3))
p.inst(CNOT(4, 5))
p.inst(RY(2.4197477, 4))
p.inst(CNOT(5, 6))
p.inst(RZ(1.72238, 4))
p.inst(RZ(1.946018, 6))
p.inst(CZ(0, 4))
p.inst(CNOT(5, 6))
p.inst(RY(0.34591488, 5))
p.inst(CNOT(6, 7))
p.inst(RZ(1.618326, 5))
p.inst(RZ(0.1583611, 7))
p.inst(CZ(0, 5))
p.inst(CNOT(6, 7))
p.inst(RY(0.83644293, 6))
p.inst(CNOT(7, 8))
p.inst(RZ(0.31072556, 6))
p.inst(RZ(2.2356786, 8))
p.inst(CZ(0, 6))
p.inst(CNOT(7, 8))
p.inst(RY(0.24167335, 7))
p.inst(CNOT(8, 9))
p.inst(RZ(0.98390069, 7))
p.inst(RZ(0.72466613, 9))
p.inst(CZ(0, 7))
p.inst(CNOT(8, 9))
p.inst(RY(1.0646688, 8))
p.inst(CNOT(9, 10))
p.inst(RZ(2.5930644, 8))
p.inst(RZ(0.66903133, 10))
p.inst(CZ(0, 8))
p.inst(CNOT(9, 10))
p.inst(RY(1.9237841, 9))
p.inst(CNOT(10, 11))
p.inst(RZ(0.22652569, 9))
p.inst(RZ(1.2695865, 11))
p.inst(CZ(0, 9))
p.inst(CNOT(10, 11))
p.inst(RY(1.1596208, 10))
p.inst(CNOT(11, 12))
p.inst(RZ(0.41487776, 10))
p.inst(RZ(1.2646738, 12))
p.inst(CZ(0, 10))
p.inst(CNOT(11, 12))
p.inst(RY(1.2702462, 11))
p.inst(CNOT(12, 13))
p.inst(RZ(2.7844251, 11))
p.inst(RZ(2.9009257, 13))
p.inst(CZ(0, 11))
p.inst(CNOT(12, 13))
p.inst(RY(1.2423356, 12))
p.inst(CNOT(13, 14))
p.inst(RZ(0.72405126, 12))
p.inst(RZ(1.6273523, 14))
p.inst(CZ(0, 12))
p.inst(CNOT(13, 14))
p.inst(RY(2.0233533, 13))
p.inst(RY(3.0869493, 14))
p.inst(RZ(0.77422169, 13))
p.inst(RZ(0.16468555, 14))
p.inst(CZ(0, 13))
p.inst(CZ(0, 14))
p.inst(RY(1.1535852, 0))
p.inst(CZ(1, 2))
p.inst(RZ(0.12828756, 0))
p.inst(CZ(1, 3))
p.inst(CZ(1, 4))
p.inst(CZ(1, 5))
p.inst(CZ(1, 6))
p.inst(CZ(1, 7))
p.inst(CZ(1, 8))
p.inst(CZ(1, 9))
p.inst(CZ(1, 10))
p.inst(CZ(1, 11))
p.inst(CZ(1, 12))
p.inst(CZ(1, 13))
p.inst(CZ(1, 14))
p.inst(RY(2.431352, 1))
p.inst(CZ(2, 3))
p.inst(RZ(1.6938178, 1))
p.inst(CZ(2, 4))
p.inst(CZ(0, 1))
p.inst(CZ(2, 5))
p.inst(CZ(2, 6))
p.inst(CZ(2, 7))
p.inst(CZ(2, 8))
p.inst(CZ(2, 9))
p.inst(CZ(2, 10))
p.inst(CZ(2, 11))
p.inst(CZ(2, 12))
p.inst(CZ(2, 13))
p.inst(CZ(2, 14))
p.inst(RY(2.161469, 2))
p.inst(CZ(3, 4))
p.inst(RZ(2.1198771, 2))
p.inst(CZ(3, 5))
p.inst(CZ(0, 2))
p.inst(CZ(3, 6))
p.inst(CZ(3, 7))
p.inst(CZ(3, 8))
p.inst(CZ(3, 9))
p.inst(CZ(3, 10))
p.inst(CZ(3, 11))
p.inst(CZ(3, 12))
p.inst(CZ(3, 13))
p.inst(CZ(3, 14))
p.inst(RY(1.429698, 3))
p.inst(CZ(4, 5))
p.inst(RZ(2.1545361, 3))
p.inst(CZ(4, 6))
p.inst(CZ(0, 3))
p.inst(CZ(4, 7))
p.inst(CZ(4, 8))
p.inst(CZ(4, 9))
p.inst(CZ(4, 10))
p.inst(CZ(4, 11))
p.inst(CZ(4, 12))
p.inst(CZ(4, 13))
p.inst(CZ(4, 14))
p.inst(RY(1.9278428, 4))
p.inst(CZ(5, 6))
p.inst(RZ(2.522728, 4))
p.inst(CZ(5, 7))
p.inst(CZ(0, 4))
p.inst(CZ(5, 8))
p.inst(CZ(5, 9))
p.inst(CZ(5, 10))
p.inst(CZ(5, 11))
p.inst(CZ(5, 12))
p.inst(CZ(5, 13))
p.inst(CZ(5, 14))
p.inst(RY(0.58897152, 5))
p.inst(CZ(6, 7))
p.inst(RZ(0.8574871, 5))
p.inst(CZ(6, 8))
p.inst(CZ(0, 5))
p.inst(CZ(6, 9))
p.inst(CZ(6, 10))
p.inst(CZ(6, 11))
p.inst(CZ(6, 12))
p.inst(CZ(6, 13))
p.inst(CZ(6, 14))
p.inst(RY(0.073603173, 6))
p.inst(CZ(7, 8))
p.inst(RZ(3.0145944, 6))
p.inst(CZ(7, 9))
p.inst(CZ(0, 6))
p.inst(CZ(7, 10))
p.inst(CZ(7, 11))
p.inst(CZ(7, 12))
p.inst(CZ(7, 13))
p.inst(CZ(7, 14))
p.inst(RY(2.1583193, 7))
p.inst(CZ(8, 9))
p.inst(RZ(1.3788067, 7))
p.inst(CZ(8, 10))
p.inst(CZ(0, 7))
p.inst(CZ(8, 11))
p.inst(CZ(8, 12))
p.inst(CZ(8, 13))
p.inst(CZ(8, 14))
p.inst(RY(2.0972212, 8))
p.inst(CZ(9, 10))
p.inst(RZ(2.1802834, 8))
p.inst(CZ(9, 11))
p.inst(CZ(0, 8))
p.inst(CZ(9, 12))
p.inst(CZ(9, 13))
p.inst(CZ(9, 14))
p.inst(RY(1.3961577, 9))
p.inst(CZ(10, 11))
p.inst(RZ(0.96219182, 9))
p.inst(CZ(10, 12))
p.inst(CZ(0, 9))
p.inst(CZ(10, 13))
p.inst(CZ(10, 14))
p.inst(RY(2.010101, 10))
p.inst(CZ(11, 12))
p.inst(RZ(1.0068101, 10))
p.inst(CZ(11, 13))
p.inst(CZ(0, 10))
p.inst(CZ(11, 14))
p.inst(RY(1.1214107, 11))
p.inst(CZ(12, 13))
p.inst(RZ(0.91526036, 11))
p.inst(CZ(12, 14))
p.inst(CZ(0, 11))
p.inst(RY(2.938263, 12))
p.inst(CZ(13, 14))
p.inst(RZ(3.0379128, 12))
p.inst(RY(1.8889546, 13))
p.inst(RY(0.88998615, 14))
p.inst(CZ(0, 12))
p.inst(RZ(0.36787701, 13))
p.inst(RZ(1.6294565, 14))
p.inst(CZ(0, 13))
p.inst(CZ(0, 14))
p.inst(RY(3.0653662, 0))
p.inst(CZ(1, 2))
p.inst(RZ(2.8730933, 0))
p.inst(CZ(1, 3))
p.inst(CZ(1, 4))
p.inst(CZ(1, 5))
p.inst(CZ(1, 6))
p.inst(CZ(1, 7))
p.inst(CZ(1, 8))
p.inst(CZ(1, 9))
p.inst(CZ(1, 10))
p.inst(CZ(1, 11))
p.inst(CZ(1, 12))
p.inst(CZ(1, 13))
p.inst(CZ(1, 14))
p.inst(RY(0.87957933, 1))
p.inst(CZ(2, 3))
p.inst(RZ(2.3904406, 1))
p.inst(CZ(2, 4))
p.inst(CZ(0, 1))
p.inst(CZ(2, 5))
p.inst(CZ(2, 6))
p.inst(CZ(2, 7))
p.inst(CZ(2, 8))
p.inst(CZ(2, 9))
p.inst(CZ(2, 10))
p.inst(CZ(2, 11))
p.inst(CZ(2, 12))
p.inst(CZ(2, 13))
p.inst(CZ(2, 14))
p.inst(RY(0.057136693, 2))
p.inst(CZ(3, 4))
p.inst(RZ(0.76744179, 2))
p.inst(CZ(3, 5))
p.inst(CZ(0, 2))
p.inst(CZ(3, 6))
p.inst(CZ(3, 7))
p.inst(CZ(3, 8))
p.inst(CZ(3, 9))
p.inst(CZ(3, 10))
p.inst(CZ(3, 11))
p.inst(CZ(3, 12))
p.inst(CZ(3, 13))
p.inst(CZ(3, 14))
p.inst(RY(2.1754857, 3))
p.inst(CZ(4, 5))
p.inst(RZ(0.33890995, 3))
p.inst(CZ(4, 6))
p.inst(CZ(0, 3))
p.inst(CZ(4, 7))
p.inst(CZ(4, 8))
p.inst(CZ(4, 9))
p.inst(CZ(4, 10))
p.inst(CZ(4, 11))
p.inst(CZ(4, 12))
p.inst(CZ(4, 13))
p.inst(CZ(4, 14))
p.inst(RY(1.1348571, 4))
p.inst(CZ(5, 6))
p.inst(RZ(1.9657683, 4))
p.inst(CZ(5, 7))
p.inst(CZ(0, 4))
p.inst(CZ(5, 8))
p.inst(CZ(5, 9))
p.inst(CZ(5, 10))
p.inst(CZ(5, 11))
p.inst(CZ(5, 12))
p.inst(CZ(5, 13))
p.inst(CZ(5, 14))
p.inst(RY(1.9834339, 5))
p.inst(CZ(6, 7))
p.inst(RZ(3.0208973, 5))
p.inst(CZ(6, 8))
p.inst(CZ(0, 5))
p.inst(CZ(6, 9))
p.inst(CZ(6, 10))
p.inst(CZ(6, 11))
p.inst(CZ(6, 12))
p.inst(CZ(6, 13))
p.inst(CZ(6, 14))
p.inst(RY(1.3962331, 6))
p.inst(CZ(7, 8))
p.inst(RZ(1.07303, 6))
p.inst(CZ(7, 9))
p.inst(CZ(0, 6))
p.inst(CZ(7, 10))
p.inst(CZ(7, 11))
p.inst(CZ(7, 12))
p.inst(CZ(7, 13))
p.inst(CZ(7, 14))
p.inst(RY(0.36045754, 7))
p.inst(CZ(8, 9))
p.inst(RZ(1.9970103, 7))
p.inst(CZ(8, 10))
p.inst(CZ(0, 7))
p.inst(CZ(8, 11))
p.inst(CZ(8, 12))
p.inst(CZ(8, 13))
p.inst(CZ(8, 14))
p.inst(RY(1.3873164, 8))
p.inst(CZ(9, 10))
p.inst(RZ(0.62152881, 8))
p.inst(CZ(9, 11))
p.inst(CZ(0, 8))
p.inst(CZ(9, 12))
p.inst(CZ(9, 13))
p.inst(CZ(9, 14))
p.inst(RY(2.5220023, 9))
p.inst(CZ(10, 11))
p.inst(RZ(1.1280364, 9))
p.inst(CZ(10, 12))
p.inst(CZ(0, 9))
p.inst(CZ(10, 13))
p.inst(CZ(10, 14))
p.inst(RY(2.8823555, 10))
p.inst(CZ(11, 12))
p.inst(RZ(2.3800308, 10))
p.inst(CZ(11, 13))
p.inst(CZ(0, 10))
p.inst(CZ(11, 14))
p.inst(RY(1.4136561, 11))
p.inst(CZ(12, 13))
p.inst(RZ(3.0036199, 11))
p.inst(CZ(12, 14))
p.inst(CZ(0, 11))
p.inst(RY(1.2721718, 12))
p.inst(CZ(13, 14))
p.inst(RZ(2.9194257, 12))
p.inst(RY(0.13706241, 13))
p.inst(RY(0.55852601, 14))
p.inst(CZ(0, 12))
p.inst(RZ(2.5948465, 13))
p.inst(RZ(0.22056829, 14))
p.inst(CZ(0, 13))
p.inst(CZ(0, 14))
p.inst(RY(1.135658, 0))
p.inst(CZ(1, 2))
p.inst(RZ(0.50402741, 0))
p.inst(CZ(1, 3))
p.inst(CZ(1, 4))
p.inst(CZ(1, 5))
p.inst(CZ(1, 6))
p.inst(CZ(1, 7))
p.inst(CZ(1, 8))
p.inst(CZ(1, 9))
p.inst(CZ(1, 10))
p.inst(CZ(1, 11))
p.inst(CZ(1, 12))
p.inst(CZ(1, 13))
p.inst(CZ(1, 14))
p.inst(RY(1.6670358, 1))
p.inst(CZ(2, 3))
p.inst(RZ(0.059332798, 1))
p.inst(CZ(2, 4))
p.inst(CZ(0, 1))
p.inst(CZ(2, 5))
p.inst(CZ(2, 6))
p.inst(CZ(2, 7))
p.inst(CZ(2, 8))
p.inst(CZ(2, 9))
p.inst(CZ(2, 10))
p.inst(CZ(2, 11))
p.inst(CZ(2, 12))
p.inst(CZ(2, 13))
p.inst(CZ(2, 14))
p.inst(RY(1.6216529, 2))
p.inst(CZ(3, 4))
p.inst(RZ(2.0388228, 2))
p.inst(CZ(3, 5))
p.inst(CZ(0, 2))
p.inst(CZ(3, 6))
p.inst(CZ(3, 7))
p.inst(CZ(3, 8))
p.inst(CZ(3, 9))
p.inst(CZ(3, 10))
p.inst(CZ(3, 11))
p.inst(CZ(3, 12))
p.inst(CZ(3, 13))
p.inst(CZ(3, 14))
p.inst(RY(1.1769293, 3))
p.inst(CZ(4, 5))
p.inst(RZ(2.7835686, 3))
p.inst(CZ(4, 6))
p.inst(CZ(0, 3))
p.inst(CZ(4, 7))
p.inst(CZ(4, 8))
p.inst(CZ(4, 9))
p.inst(CZ(4, 10))
p.inst(CZ(4, 11))
p.inst(CZ(4, 12))
p.inst(CZ(4, 13))
p.inst(CZ(4, 14))
p.inst(RY(1.4078831, 4))
p.inst(CZ(5, 6))
p.inst(RZ(2.5237245, 4))
p.inst(CZ(5, 7))
p.inst(CZ(0, 4))
p.inst(CZ(5, 8))
p.inst(CZ(5, 9))
p.inst(CZ(5, 10))
p.inst(CZ(5, 11))
p.inst(CZ(5, 12))
p.inst(CZ(5, 13))
p.inst(CZ(5, 14))
p.inst(RY(3.0032051, 5))
p.inst(CZ(6, 7))
p.inst(RZ(1.90216, 5))
p.inst(CZ(6, 8))
p.inst(CZ(0, 5))
p.inst(CZ(6, 9))
p.inst(CZ(6, 10))
p.inst(CZ(6, 11))
p.inst(CZ(6, 12))
p.inst(CZ(6, 13))
p.inst(CZ(6, 14))
p.inst(RY(1.8008253, 6))
p.inst(CZ(7, 8))
p.inst(RZ(1.8522674, 6))
p.inst(CZ(7, 9))
p.inst(CZ(0, 6))
p.inst(CZ(7, 10))
p.inst(CZ(7, 11))
p.inst(CZ(7, 12))
p.inst(CZ(7, 13))
p.inst(CZ(7, 14))
p.inst(RY(0.56633861, 7))
p.inst(CZ(8, 9))
p.inst(RZ(0.57593017, 7))
p.inst(CZ(8, 10))
p.inst(CZ(0, 7))
p.inst(CZ(8, 11))
p.inst(CZ(8, 12))
p.inst(CZ(8, 13))
p.inst(CZ(8, 14))
p.inst(RY(0.49058986, 8))
p.inst(CZ(9, 10))
p.inst(RZ(2.2015657, 8))
p.inst(CZ(9, 11))
p.inst(CZ(0, 8))
p.inst(CZ(9, 12))
p.inst(CZ(9, 13))
p.inst(CZ(9, 14))
p.inst(RY(1.910039, 9))
p.inst(CZ(10, 11))
p.inst(RZ(0.95992321, 9))
p.inst(CZ(10, 12))
p.inst(CZ(0, 9))
p.inst(CZ(10, 13))
p.inst(CZ(10, 14))
p.inst(RY(1.0434417, 10))
p.inst(CZ(11, 12))
p.inst(RZ(2.8412874, 10))
p.inst(CZ(11, 13))
p.inst(CZ(0, 10))
p.inst(CZ(11, 14))
p.inst(RY(2.345931, 11))
p.inst(CZ(12, 13))
p.inst(RZ(1.3866938, 11))
p.inst(CZ(12, 14))
p.inst(CZ(0, 11))
p.inst(RY(0.27014423, 12))
p.inst(CZ(13, 14))
p.inst(RZ(2.3213249, 12))
p.inst(RY(1.8468924, 13))
p.inst(RY(0.096143467, 14))
p.inst(CZ(0, 12))
p.inst(RZ(0.22449483, 13))
p.inst(RZ(3.1120735, 14))
p.inst(CZ(0, 13))
p.inst(CZ(0, 14))
p.inst(CZ(1, 2))
p.inst(CZ(1, 3))
p.inst(CZ(1, 4))
p.inst(CZ(1, 5))
p.inst(CZ(1, 6))
p.inst(CZ(1, 7))
p.inst(CZ(1, 8))
p.inst(CZ(1, 9))
p.inst(CZ(1, 10))
p.inst(CZ(1, 11))
p.inst(CZ(1, 12))
p.inst(CZ(1, 13))
p.inst(CZ(1, 14))
p.inst(CZ(2, 3))
p.inst(CZ(2, 4))
p.inst(CZ(2, 5))
p.inst(CZ(2, 6))
p.inst(CZ(2, 7))
p.inst(CZ(2, 8))
p.inst(CZ(2, 9))
p.inst(CZ(2, 10))
p.inst(CZ(2, 11))
p.inst(CZ(2, 12))
p.inst(CZ(2, 13))
p.inst(CZ(2, 14))
p.inst(CZ(3, 4))
p.inst(CZ(3, 5))
p.inst(CZ(3, 6))
p.inst(CZ(3, 7))
p.inst(CZ(3, 8))
p.inst(CZ(3, 9))
p.inst(CZ(3, 10))
p.inst(CZ(3, 11))
p.inst(CZ(3, 12))
p.inst(CZ(3, 13))
p.inst(CZ(3, 14))
p.inst(CZ(4, 5))
p.inst(CZ(4, 6))
p.inst(CZ(4, 7))
p.inst(CZ(4, 8))
p.inst(CZ(4, 9))
p.inst(CZ(4, 10))
p.inst(CZ(4, 11))
p.inst(CZ(4, 12))
p.inst(CZ(4, 13))
p.inst(CZ(4, 14))
p.inst(CZ(5, 6))
p.inst(CZ(5, 7))
p.inst(CZ(5, 8))
p.inst(CZ(5, 9))
p.inst(CZ(5, 10))
p.inst(CZ(5, 11))
p.inst(CZ(5, 12))
p.inst(CZ(5, 13))
p.inst(CZ(5, 14))
p.inst(CZ(6, 7))
p.inst(CZ(6, 8))
p.inst(CZ(6, 9))
p.inst(CZ(6, 10))
p.inst(CZ(6, 11))
p.inst(CZ(6, 12))
p.inst(CZ(6, 13))
p.inst(CZ(6, 14))
p.inst(CZ(7, 8))
p.inst(CZ(7, 9))
p.inst(CZ(7, 10))
p.inst(CZ(7, 11))
p.inst(CZ(7, 12))
p.inst(CZ(7, 13))
p.inst(CZ(7, 14))
p.inst(CZ(8, 9))
p.inst(CZ(8, 10))
p.inst(CZ(8, 11))
p.inst(CZ(8, 12))
p.inst(CZ(8, 13))
p.inst(CZ(8, 14))
p.inst(CZ(9, 10))
p.inst(CZ(9, 11))
p.inst(CZ(9, 12))
p.inst(CZ(9, 13))
p.inst(CZ(9, 14))
p.inst(CZ(10, 11))
p.inst(CZ(10, 12))
p.inst(CZ(10, 13))
p.inst(CZ(10, 14))
p.inst(CZ(11, 12))
p.inst(CZ(11, 13))
p.inst(CZ(11, 14))
p.inst(CZ(12, 13))
p.inst(CZ(12, 14))
p.inst(CZ(13, 14))
p.inst(MEASURE(0, ro[15]))
p.inst(MEASURE(1, ro[16]))
p.inst(MEASURE(2, ro[17]))
p.inst(MEASURE(3, ro[18]))
p.inst(MEASURE(4, ro[19]))
p.inst(MEASURE(5, ro[20]))
p.inst(MEASURE(6, ro[21]))
p.inst(MEASURE(7, ro[22]))
p.inst(MEASURE(8, ro[23]))
p.inst(MEASURE(9, ro[24]))
p.inst(MEASURE(10, ro[25]))
p.inst(MEASURE(11, ro[26]))
p.inst(MEASURE(12, ro[27]))
p.inst(MEASURE(13, ro[28]))
p.inst(MEASURE(14, ro[29]))

p.wrap_in_numshots_loop(shots)

qc = get_qc('15q-qvm')
results_list = qc.run(p)
results = list(map(lambda arr: reduce(lambda x, y: str(x) + str(y), arr[::-1], ""), results_list))
counts = dict(zip(results,[results.count(i) for i in results]))
print(counts)
