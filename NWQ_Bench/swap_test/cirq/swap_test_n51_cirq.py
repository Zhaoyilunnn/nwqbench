import cirq
import numpy as np
from functools import reduce

q = [cirq.NamedQubit('q' + str(i)) for i in range(51)]

circuit = cirq.Circuit(
    cirq.H(q[0]),
    cirq.rx(-3.6924814)(q[1]),
    cirq.rx(5.4291652)(q[2]),
    cirq.rx(1.3594796)(q[3]),
    cirq.rx(-5.9123043)(q[4]),
    cirq.rx(-0.13186279)(q[5]),
    cirq.rx(-4.3869008)(q[6]),
    cirq.rx(4.9830092)(q[7]),
    cirq.rx(-1.4181518)(q[8]),
    cirq.rx(3.9058792)(q[9]),
    cirq.rx(2.1483107)(q[10]),
    cirq.rx(-1.552265)(q[11]),
    cirq.rx(3.5437778)(q[12]),
    cirq.rx(3.5074824)(q[13]),
    cirq.rx(-3.1458178)(q[14]),
    cirq.rx(2.9808713)(q[15]),
    cirq.rx(-4.5722067)(q[16]),
    cirq.rx(-2.9717581)(q[17]),
    cirq.rx(4.3812134)(q[18]),
    cirq.rx(-0.54413824)(q[19]),
    cirq.rx(2.8824416)(q[20]),
    cirq.rx(0.99178896)(q[21]),
    cirq.rx(5.4169858)(q[22]),
    cirq.rx(5.7239307)(q[23]),
    cirq.rx(3.7629698)(q[24]),
    cirq.rx(-4.5485128)(q[25]),
    cirq.rx(-3.2923147)(q[26]),
    cirq.rx(5.6875289)(q[27]),
    cirq.rx(1.2065807)(q[28]),
    cirq.rx(-6.0041031)(q[29]),
    cirq.rx(0.50271205)(q[30]),
    cirq.rx(-4.1172873)(q[31]),
    cirq.rx(4.8261369)(q[32]),
    cirq.rx(-1.5885531)(q[33]),
    cirq.rx(3.2780951)(q[34]),
    cirq.rx(2.2125048)(q[35]),
    cirq.rx(-2.1338861)(q[36]),
    cirq.rx(2.9294436)(q[37]),
    cirq.rx(4.0850493)(q[38]),
    cirq.rx(-2.9631606)(q[39]),
    cirq.rx(2.9322572)(q[40]),
    cirq.rx(-4.3125018)(q[41]),
    cirq.rx(-2.9593885)(q[42]),
    cirq.rx(4.335384)(q[43]),
    cirq.rx(-0.18151701)(q[44]),
    cirq.rx(3.026406)(q[45]),
    cirq.rx(0.67977512)(q[46]),
    cirq.rx(5.3901384)(q[47]),
    cirq.rx(5.4778772)(q[48]),
    cirq.rx(3.2416375)(q[49]),
    cirq.rx(-4.6932636)(q[50]),
    cirq.CSWAP(q[0], q[1], q[26]),
    cirq.CSWAP(q[0], q[2], q[27]),
    cirq.CSWAP(q[0], q[3], q[28]),
    cirq.CSWAP(q[0], q[4], q[29]),
    cirq.CSWAP(q[0], q[5], q[30]),
    cirq.CSWAP(q[0], q[6], q[31]),
    cirq.CSWAP(q[0], q[7], q[32]),
    cirq.CSWAP(q[0], q[8], q[33]),
    cirq.CSWAP(q[0], q[9], q[34]),
    cirq.CSWAP(q[0], q[10], q[35]),
    cirq.CSWAP(q[0], q[11], q[36]),
    cirq.CSWAP(q[0], q[12], q[37]),
    cirq.CSWAP(q[0], q[13], q[38]),
    cirq.CSWAP(q[0], q[14], q[39]),
    cirq.CSWAP(q[0], q[15], q[40]),
    cirq.CSWAP(q[0], q[16], q[41]),
    cirq.CSWAP(q[0], q[17], q[42]),
    cirq.CSWAP(q[0], q[18], q[43]),
    cirq.CSWAP(q[0], q[19], q[44]),
    cirq.CSWAP(q[0], q[20], q[45]),
    cirq.CSWAP(q[0], q[21], q[46]),
    cirq.CSWAP(q[0], q[22], q[47]),
    cirq.CSWAP(q[0], q[23], q[48]),
    cirq.CSWAP(q[0], q[24], q[49]),
    cirq.CSWAP(q[0], q[25], q[50]),
    cirq.H(q[0]),
    cirq.measure(q[0], key='c00')
)

simulator = cirq.Simulator()
result = simulator.run(circuit, repetitions=1024)
result_dict = dict(result.multi_measurement_histogram(keys=['c00', ]))
keys = list(map(lambda arr: reduce(lambda x, y: str(x) + str(y), arr[::-1]), result_dict.keys()))
counts = dict(zip(keys,[value for value in result_dict.values()]))
print(counts)