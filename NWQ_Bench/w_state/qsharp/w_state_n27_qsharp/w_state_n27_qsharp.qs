namespace Quantum {
    open Microsoft.Quantum.Intrinsic;
    open Microsoft.Quantum.Canon;
    open Microsoft.Quantum.Math;
    open Microsoft.Quantum.Convert;

    function SetBitValue(reg: Int, bit: Int, value: Bool): Int {
        if(value) {
            return reg ||| (1 <<< bit);
        } else {
            return reg &&& ~~~(1 <<< bit);
        }
    }
    
    operation Circuit() : (Int, Int) {
        mutable c = 0;
        mutable meas = 0;
        using(qubits = Qubit[27]) {
            Ry(-PI() / 4.0, qubits[0]);
            Ry(-0.95531662, qubits[1]);
            Ry(-PI() / 3.0, qubits[2]);
            Ry(-1.1071487, qubits[3]);
            Ry(-1.150262, qubits[4]);
            Ry(-1.1831996, qubits[5]);
            Ry(-1.2094292, qubits[6]);
            Ry(-1.2309594, qubits[7]);
            Ry(-1.2490458, qubits[8]);
            Ry(-1.264519, qubits[9]);
            Ry(-1.2779536, qubits[10]);
            Ry(-1.2897614, qubits[11]);
            Ry(-1.3002466, qubits[12]);
            Ry(-1.3096389, qubits[13]);
            Ry(-1.3181161, qubits[14]);
            Ry(-1.3258177, qubits[15]);
            Ry(-1.3328552, qubits[16]);
            Ry(-1.339319, qubits[17]);
            Ry(-1.3452829, qubits[18]);
            Ry(-1.3508083, qubits[19]);
            Ry(-1.3559465, qubits[20]);
            Ry(-1.3607406, qubits[21]);
            Ry(-1.3652274, qubits[22]);
            Ry(-1.3694384, qubits[23]);
            Ry(-1.3734008, qubits[24]);
            Ry(-1.377138, qubits[25]);
            X(qubits[26]);
            Controlled Z([qubits[26]], (qubits[25]));
            Ry(1.377138, qubits[25]);
            Controlled Z([qubits[25]], (qubits[24]));
            Ry(1.3734008, qubits[24]);
            CNOT(qubits[25], qubits[26]);
            Controlled Z([qubits[24]], (qubits[23]));
            Ry(1.3694384, qubits[23]);
            CNOT(qubits[24], qubits[25]);
            Controlled Z([qubits[23]], (qubits[22]));
            Ry(1.3652274, qubits[22]);
            CNOT(qubits[23], qubits[24]);
            Controlled Z([qubits[22]], (qubits[21]));
            Ry(1.3607406, qubits[21]);
            CNOT(qubits[22], qubits[23]);
            Controlled Z([qubits[21]], (qubits[20]));
            Ry(1.3559465, qubits[20]);
            CNOT(qubits[21], qubits[22]);
            Controlled Z([qubits[20]], (qubits[19]));
            Ry(1.3508083, qubits[19]);
            CNOT(qubits[20], qubits[21]);
            Controlled Z([qubits[19]], (qubits[18]));
            Ry(1.3452829, qubits[18]);
            CNOT(qubits[19], qubits[20]);
            Controlled Z([qubits[18]], (qubits[17]));
            Ry(1.339319, qubits[17]);
            CNOT(qubits[18], qubits[19]);
            Controlled Z([qubits[17]], (qubits[16]));
            Ry(1.3328552, qubits[16]);
            CNOT(qubits[17], qubits[18]);
            Controlled Z([qubits[16]], (qubits[15]));
            Ry(1.3258177, qubits[15]);
            CNOT(qubits[16], qubits[17]);
            Controlled Z([qubits[15]], (qubits[14]));
            Ry(1.3181161, qubits[14]);
            CNOT(qubits[15], qubits[16]);
            Controlled Z([qubits[14]], (qubits[13]));
            Ry(1.3096389, qubits[13]);
            CNOT(qubits[14], qubits[15]);
            Controlled Z([qubits[13]], (qubits[12]));
            Ry(1.3002466, qubits[12]);
            CNOT(qubits[13], qubits[14]);
            Controlled Z([qubits[12]], (qubits[11]));
            Ry(1.2897614, qubits[11]);
            CNOT(qubits[12], qubits[13]);
            Controlled Z([qubits[11]], (qubits[10]));
            Ry(1.2779536, qubits[10]);
            CNOT(qubits[11], qubits[12]);
            Controlled Z([qubits[10]], (qubits[9]));
            Ry(1.264519, qubits[9]);
            CNOT(qubits[10], qubits[11]);
            Controlled Z([qubits[9]], (qubits[8]));
            Ry(1.2490458, qubits[8]);
            CNOT(qubits[9], qubits[10]);
            Controlled Z([qubits[8]], (qubits[7]));
            Ry(1.2309594, qubits[7]);
            CNOT(qubits[8], qubits[9]);
            Controlled Z([qubits[7]], (qubits[6]));
            Ry(1.2094292, qubits[6]);
            CNOT(qubits[7], qubits[8]);
            Controlled Z([qubits[6]], (qubits[5]));
            Ry(1.1831996, qubits[5]);
            CNOT(qubits[6], qubits[7]);
            Controlled Z([qubits[5]], (qubits[4]));
            Ry(1.150262, qubits[4]);
            CNOT(qubits[5], qubits[6]);
            Controlled Z([qubits[4]], (qubits[3]));
            Ry(1.1071487, qubits[3]);
            CNOT(qubits[4], qubits[5]);
            Controlled Z([qubits[3]], (qubits[2]));
            Ry(PI() / 3.0, qubits[2]);
            CNOT(qubits[3], qubits[4]);
            Controlled Z([qubits[2]], (qubits[1]));
            Ry(0.95531662, qubits[1]);
            CNOT(qubits[2], qubits[3]);
            Controlled Z([qubits[1]], (qubits[0]));
            Ry(PI() / 4.0, qubits[0]);
            CNOT(qubits[1], qubits[2]);
            CNOT(qubits[0], qubits[1]);
            set meas = SetBitValue(meas, 0, ResultAsBool(M(qubits[0])));
            set meas = SetBitValue(meas, 1, ResultAsBool(M(qubits[1])));
            set meas = SetBitValue(meas, 2, ResultAsBool(M(qubits[2])));
            set meas = SetBitValue(meas, 3, ResultAsBool(M(qubits[3])));
            set meas = SetBitValue(meas, 4, ResultAsBool(M(qubits[4])));
            set meas = SetBitValue(meas, 5, ResultAsBool(M(qubits[5])));
            set meas = SetBitValue(meas, 6, ResultAsBool(M(qubits[6])));
            set meas = SetBitValue(meas, 7, ResultAsBool(M(qubits[7])));
            set meas = SetBitValue(meas, 8, ResultAsBool(M(qubits[8])));
            set meas = SetBitValue(meas, 9, ResultAsBool(M(qubits[9])));
            set meas = SetBitValue(meas, 10, ResultAsBool(M(qubits[10])));
            set meas = SetBitValue(meas, 11, ResultAsBool(M(qubits[11])));
            set meas = SetBitValue(meas, 12, ResultAsBool(M(qubits[12])));
            set meas = SetBitValue(meas, 13, ResultAsBool(M(qubits[13])));
            set meas = SetBitValue(meas, 14, ResultAsBool(M(qubits[14])));
            set meas = SetBitValue(meas, 15, ResultAsBool(M(qubits[15])));
            set meas = SetBitValue(meas, 16, ResultAsBool(M(qubits[16])));
            set meas = SetBitValue(meas, 17, ResultAsBool(M(qubits[17])));
            set meas = SetBitValue(meas, 18, ResultAsBool(M(qubits[18])));
            set meas = SetBitValue(meas, 19, ResultAsBool(M(qubits[19])));
            set meas = SetBitValue(meas, 20, ResultAsBool(M(qubits[20])));
            set meas = SetBitValue(meas, 21, ResultAsBool(M(qubits[21])));
            set meas = SetBitValue(meas, 22, ResultAsBool(M(qubits[22])));
            set meas = SetBitValue(meas, 23, ResultAsBool(M(qubits[23])));
            set meas = SetBitValue(meas, 24, ResultAsBool(M(qubits[24])));
            set meas = SetBitValue(meas, 25, ResultAsBool(M(qubits[25])));
            set meas = SetBitValue(meas, 26, ResultAsBool(M(qubits[26])));
            ResetAll(qubits);
        }
        return (c, meas);
    }
}
