namespace Quantum {
    open Microsoft.Quantum.Intrinsic;
    open Microsoft.Quantum.Canon;
    open Microsoft.Quantum.Math;
    open Microsoft.Quantum.Convert;

    function SetBitValue(reg: Int, bit: Int, value: Bool): Int {
        if(value) {
            return reg ||| (1 <<< bit);
        } else {
            return reg &&& ~~~(1 <<< bit);
        }
    }
    
    operation Circuit() : (Int, Int) {
        mutable c = 0;
        mutable meas = 0;
        using(qubits = Qubit[31]) {
            H(qubits[0]);
            Ry(0.89878389, qubits[1]);
            Ry(3.3212053, qubits[2]);
            Ry(4.3050549, qubits[3]);
            Ry(0.41562164, qubits[4]);
            Ry(2.1732321, qubits[5]);
            Ry(4.3073627, qubits[6]);
            Ry(4.7653855, qubits[7]);
            Ry(5.0676038, qubits[8]);
            Ry(5.8766045, qubits[9]);
            Ry(4.0647995, qubits[10]);
            Ry(4.8677437, qubits[11]);
            Ry(0.9691041, qubits[12]);
            Ry(2.6202106, qubits[13]);
            Ry(0.27403454, qubits[14]);
            Ry(3.3359242, qubits[15]);
            Ry(2.4896027, qubits[16]);
            Ry(1.306116, qubits[17]);
            Ry(0.059016132, qubits[18]);
            Ry(-1.4433159, qubits[19]);
            Ry(-1.1256615, qubits[20]);
            Ry(-2.3034596, qubits[21]);
            Ry(-2.6631428, qubits[22]);
            Ry(-0.30256481, qubits[23]);
            Ry(2.0523176, qubits[24]);
            Ry(-2.4409305, qubits[25]);
            Ry(-2.4674416, qubits[26]);
            Ry(-2.9813229, qubits[27]);
            Ry(-2.2676944, qubits[28]);
            Ry(1.6081796, qubits[29]);
            Ry(1.1392807, qubits[30]);
            Rz(5.6416834, qubits[1]);
            Rz(3.6348198, qubits[2]);
            Rz(2.8617571, qubits[3]);
            Rz(6.0618654, qubits[4]);
            Rz(4.6021025, qubits[5]);
            Rz(1.2456433, qubits[6]);
            Rz(4.3514547, qubits[7]);
            Rz(0.32517251, qubits[8]);
            Rz(1.0035958, qubits[9]);
            Rz(1.5213617, qubits[10]);
            Rz(3.2593996, qubits[11]);
            Rz(4.6133537, qubits[12]);
            Rz(1.8627107, qubits[13]);
            Rz(6.2246566, qubits[14]);
            Rz(3.4175022, qubits[15]);
            Rz(-1.8589954, qubits[16]);
            Rz(0.050238184, qubits[17]);
            Rz(0.66186466, qubits[18]);
            Rz(-2.6685869, qubits[19]);
            Rz(-0.53508878, qubits[20]);
            Rz(-2.4653912, qubits[21]);
            Rz(-1.3586213, qubits[22]);
            Rz(-0.13520771, qubits[23]);
            Rz(2.958152, qubits[24]);
            Rz(2.7933767, qubits[25]);
            Rz(2.0315624, qubits[26]);
            Rz(-1.7363347, qubits[27]);
            Rz(-0.98170447, qubits[28]);
            Rz(2.2900202, qubits[29]);
            Rz(0.82292005, qubits[30]);
            yy(0.26433387, qubits[1], qubits[2]);
            zz(1.0291962, qubits[1], qubits[2]);
            yy(2.3846033, qubits[2], qubits[3]);
            zz(5.5313205, qubits[2], qubits[3]);
            Controlled Ry([qubits[1]], (1.5063061, qubits[2]));
            yy(6.1056165, qubits[3], qubits[4]);
            Controlled Rz([qubits[1]], (5.85077, qubits[2]));
            zz(0.60892931, qubits[3], qubits[4]);
            Controlled Ry([qubits[2]], (4.9900423, qubits[3]));
            yy(6.1001135, qubits[4], qubits[5]);
            Controlled Rz([qubits[2]], (1.0353808, qubits[3]));
            zz(6.1250482, qubits[4], qubits[5]);
            Controlled Ry([qubits[3]], (4.2054998, qubits[4]));
            yy(3.731352, qubits[5], qubits[6]);
            Controlled Rz([qubits[3]], (1.298181, qubits[4]));
            zz(5.1263764, qubits[5], qubits[6]);
            Controlled Ry([qubits[4]], (4.5232981, qubits[5]));
            yy(4.9092755, qubits[6], qubits[7]);
            Controlled Rz([qubits[4]], (0.20611375, qubits[5]));
            zz(4.356695, qubits[6], qubits[7]);
            Controlled Ry([qubits[5]], (2.7654812, qubits[6]));
            yy(0.96433775, qubits[7], qubits[8]);
            Controlled Rz([qubits[5]], (3.9324449, qubits[6]));
            zz(0.13531445, qubits[7], qubits[8]);
            Controlled Ry([qubits[6]], (5.4207911, qubits[7]));
            yy(5.0403312, qubits[8], qubits[9]);
            Controlled Rz([qubits[6]], (4.445254, qubits[7]));
            zz(0.45384105, qubits[8], qubits[9]);
            Controlled Ry([qubits[7]], (2.7143549, qubits[8]));
            yy(2.912778, qubits[9], qubits[10]);
            Controlled Rz([qubits[7]], (1.1007439, qubits[8]));
            zz(0.27825117, qubits[9], qubits[10]);
            Controlled Ry([qubits[8]], (4.6707242, qubits[9]));
            yy(3.4267556, qubits[10], qubits[11]);
            Controlled Rz([qubits[8]], (4.3748553, qubits[9]));
            zz(5.2543734, qubits[10], qubits[11]);
            Controlled Ry([qubits[9]], (1.6910189, qubits[10]));
            yy(1.4708367, qubits[11], qubits[12]);
            Controlled Rz([qubits[9]], (3.5980876, qubits[10]));
            zz(4.9942, qubits[11], qubits[12]);
            Controlled Ry([qubits[10]], (2.3306333, qubits[11]));
            yy(5.4278958, qubits[12], qubits[13]);
            Controlled Rz([qubits[10]], (0.28115271, qubits[11]));
            zz(2.9421363, qubits[12], qubits[13]);
            Controlled Ry([qubits[11]], (3.0871756, qubits[12]));
            yy(5.8173858, qubits[13], qubits[14]);
            Controlled Rz([qubits[11]], (1.195914, qubits[12]));
            zz(4.4827015, qubits[13], qubits[14]);
            Controlled Ry([qubits[12]], (6.1062132, qubits[13]));
            yy(4.7778372, qubits[14], qubits[15]);
            Controlled Rz([qubits[12]], (0.47533831, qubits[13]));
            zz(5.3833329, qubits[14], qubits[15]);
            Controlled Ry([qubits[13]], (1.9660597, qubits[14]));
            Controlled Rz([qubits[13]], (2.3825069, qubits[14]));
            Controlled Ry([qubits[14]], (0.067020301, qubits[15]));
            Controlled Rz([qubits[14]], (5.2468423, qubits[15]));
            Controlled SWAP([qubits[0]], (qubits[1], qubits[16]));
            Controlled SWAP([qubits[0]], (qubits[2], qubits[17]));
            Controlled SWAP([qubits[0]], (qubits[3], qubits[18]));
            Controlled SWAP([qubits[0]], (qubits[4], qubits[19]));
            Controlled SWAP([qubits[0]], (qubits[5], qubits[20]));
            Controlled SWAP([qubits[0]], (qubits[6], qubits[21]));
            Controlled SWAP([qubits[0]], (qubits[7], qubits[22]));
            Controlled SWAP([qubits[0]], (qubits[8], qubits[23]));
            Controlled SWAP([qubits[0]], (qubits[9], qubits[24]));
            Controlled SWAP([qubits[0]], (qubits[10], qubits[25]));
            Controlled SWAP([qubits[0]], (qubits[11], qubits[26]));
            Controlled SWAP([qubits[0]], (qubits[12], qubits[27]));
            Controlled SWAP([qubits[0]], (qubits[13], qubits[28]));
            Controlled SWAP([qubits[0]], (qubits[14], qubits[29]));
            Controlled SWAP([qubits[0]], (qubits[15], qubits[30]));
            H(qubits[0]);
            set meas = SetBitValue(meas, 0, ResultAsBool(M(qubits[0])));
            set meas = SetBitValue(meas, 1, ResultAsBool(M(qubits[1])));
            set meas = SetBitValue(meas, 2, ResultAsBool(M(qubits[2])));
            set meas = SetBitValue(meas, 3, ResultAsBool(M(qubits[3])));
            set meas = SetBitValue(meas, 4, ResultAsBool(M(qubits[4])));
            set meas = SetBitValue(meas, 5, ResultAsBool(M(qubits[5])));
            set meas = SetBitValue(meas, 6, ResultAsBool(M(qubits[6])));
            set meas = SetBitValue(meas, 7, ResultAsBool(M(qubits[7])));
            set meas = SetBitValue(meas, 8, ResultAsBool(M(qubits[8])));
            set meas = SetBitValue(meas, 9, ResultAsBool(M(qubits[9])));
            set meas = SetBitValue(meas, 10, ResultAsBool(M(qubits[10])));
            set meas = SetBitValue(meas, 11, ResultAsBool(M(qubits[11])));
            set meas = SetBitValue(meas, 12, ResultAsBool(M(qubits[12])));
            set meas = SetBitValue(meas, 13, ResultAsBool(M(qubits[13])));
            set meas = SetBitValue(meas, 14, ResultAsBool(M(qubits[14])));
            set meas = SetBitValue(meas, 15, ResultAsBool(M(qubits[15])));
            set meas = SetBitValue(meas, 16, ResultAsBool(M(qubits[16])));
            set meas = SetBitValue(meas, 17, ResultAsBool(M(qubits[17])));
            set meas = SetBitValue(meas, 18, ResultAsBool(M(qubits[18])));
            set meas = SetBitValue(meas, 19, ResultAsBool(M(qubits[19])));
            set meas = SetBitValue(meas, 20, ResultAsBool(M(qubits[20])));
            set meas = SetBitValue(meas, 21, ResultAsBool(M(qubits[21])));
            set meas = SetBitValue(meas, 22, ResultAsBool(M(qubits[22])));
            set meas = SetBitValue(meas, 23, ResultAsBool(M(qubits[23])));
            set meas = SetBitValue(meas, 24, ResultAsBool(M(qubits[24])));
            set meas = SetBitValue(meas, 25, ResultAsBool(M(qubits[25])));
            set meas = SetBitValue(meas, 26, ResultAsBool(M(qubits[26])));
            set meas = SetBitValue(meas, 27, ResultAsBool(M(qubits[27])));
            set meas = SetBitValue(meas, 28, ResultAsBool(M(qubits[28])));
            set meas = SetBitValue(meas, 29, ResultAsBool(M(qubits[29])));
            set meas = SetBitValue(meas, 30, ResultAsBool(M(qubits[30])));
            ResetAll(qubits);
        }
        return (c, meas);
    }
}
