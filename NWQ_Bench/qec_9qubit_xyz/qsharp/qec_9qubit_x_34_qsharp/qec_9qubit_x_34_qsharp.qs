namespace Quantum {
    open Microsoft.Quantum.Intrinsic;
    open Microsoft.Quantum.Canon;
    open Microsoft.Quantum.Math;
    open Microsoft.Quantum.Convert;

    function SetBitValue(reg: Int, bit: Int, value: Bool): Int {
        if(value) {
            return reg ||| (1 <<< bit);
        } else {
            return reg &&& ~~~(1 <<< bit);
        }
    }
    
    operation Circuit() : (Int) {
        mutable c0 = 0;
        using(qubits = Qubit[34]) {
            H(qubits[0]);
            CNOT(qubits[0], qubits[3]);
            CNOT(qubits[0], qubits[6]);
            H(qubits[0]);
            H(qubits[3]);
            H(qubits[6]);
            CNOT(qubits[0], qubits[1]);
            CNOT(qubits[3], qubits[4]);
            CNOT(qubits[6], qubits[7]);
            CNOT(qubits[0], qubits[2]);
            CNOT(qubits[3], qubits[5]);
            CNOT(qubits[6], qubits[8]);
            CNOT(qubits[0], qubits[18]);
            CNOT(qubits[1], qubits[18]);
            CNOT(qubits[1], qubits[19]);
            CNOT(qubits[2], qubits[19]);
            CNOT(qubits[3], qubits[20]);
            CNOT(qubits[4], qubits[20]);
            CNOT(qubits[4], qubits[21]);
            CNOT(qubits[5], qubits[21]);
            CNOT(qubits[6], qubits[22]);
            CNOT(qubits[7], qubits[22]);
            CNOT(qubits[7], qubits[23]);
            CNOT(qubits[8], qubits[23]);
            set c0 = SetBitValue(c0, 0, ResultAsBool(M(qubits[18])));
            set c0 = SetBitValue(c0, 1, ResultAsBool(M(qubits[19])));
            set c0 = SetBitValue(c0, 2, ResultAsBool(M(qubits[20])));
            set c0 = SetBitValue(c0, 3, ResultAsBool(M(qubits[21])));
            set c0 = SetBitValue(c0, 4, ResultAsBool(M(qubits[22])));
            set c0 = SetBitValue(c0, 5, ResultAsBool(M(qubits[23])));
            H(qubits[0]);
            H(qubits[1]);
            H(qubits[2]);
            H(qubits[3]);
            H(qubits[4]);
            H(qubits[5]);
            H(qubits[6]);
            H(qubits[7]);
            H(qubits[8]);
            CNOT(qubits[0], qubits[24]);
            CNOT(qubits[3], qubits[25]);
            CNOT(qubits[1], qubits[24]);
            CNOT(qubits[4], qubits[25]);
            CNOT(qubits[2], qubits[24]);
            CNOT(qubits[5], qubits[25]);
            CNOT(qubits[3], qubits[24]);
            CNOT(qubits[6], qubits[25]);
            CNOT(qubits[4], qubits[24]);
            CNOT(qubits[7], qubits[25]);
            CNOT(qubits[5], qubits[24]);
            CNOT(qubits[8], qubits[25]);
            set c0 = SetBitValue(c0, 6, ResultAsBool(M(qubits[24])));
            set c0 = SetBitValue(c0, 7, ResultAsBool(M(qubits[25])));
            H(qubits[0]);
            H(qubits[1]);
            H(qubits[2]);
            H(qubits[3]);
            H(qubits[4]);
            H(qubits[5]);
            H(qubits[6]);
            H(qubits[7]);
            H(qubits[9]);
            CNOT(qubits[9], qubits[12]);
            CNOT(qubits[9], qubits[15]);
            H(qubits[9]);
            H(qubits[12]);
            H(qubits[15]);
            CNOT(qubits[9], qubits[10]);
            CNOT(qubits[12], qubits[13]);
            CNOT(qubits[15], qubits[16]);
            CNOT(qubits[9], qubits[11]);
            CNOT(qubits[12], qubits[14]);
            CNOT(qubits[15], qubits[17]);
            CNOT(qubits[9], qubits[26]);
            CNOT(qubits[10], qubits[26]);
            CNOT(qubits[10], qubits[27]);
            CNOT(qubits[11], qubits[27]);
            CNOT(qubits[12], qubits[28]);
            CNOT(qubits[13], qubits[28]);
            CNOT(qubits[13], qubits[29]);
            CNOT(qubits[14], qubits[29]);
            CNOT(qubits[15], qubits[30]);
            CNOT(qubits[16], qubits[30]);
            CNOT(qubits[16], qubits[31]);
            CNOT(qubits[17], qubits[31]);
            set c0 = SetBitValue(c0, 8, ResultAsBool(M(qubits[26])));
            set c0 = SetBitValue(c0, 9, ResultAsBool(M(qubits[27])));
            set c0 = SetBitValue(c0, 10, ResultAsBool(M(qubits[28])));
            set c0 = SetBitValue(c0, 11, ResultAsBool(M(qubits[29])));
            set c0 = SetBitValue(c0, 12, ResultAsBool(M(qubits[30])));
            set c0 = SetBitValue(c0, 13, ResultAsBool(M(qubits[31])));
            H(qubits[9]);
            H(qubits[10]);
            H(qubits[11]);
            H(qubits[12]);
            H(qubits[13]);
            H(qubits[14]);
            H(qubits[15]);
            H(qubits[16]);
            H(qubits[17]);
            CNOT(qubits[9], qubits[32]);
            CNOT(qubits[12], qubits[33]);
            CNOT(qubits[10], qubits[32]);
            CNOT(qubits[13], qubits[33]);
            CNOT(qubits[11], qubits[32]);
            CNOT(qubits[14], qubits[33]);
            CNOT(qubits[12], qubits[32]);
            CNOT(qubits[15], qubits[33]);
            CNOT(qubits[13], qubits[32]);
            CNOT(qubits[16], qubits[33]);
            CNOT(qubits[14], qubits[32]);
            CNOT(qubits[17], qubits[33]);
            set c0 = SetBitValue(c0, 14, ResultAsBool(M(qubits[32])));
            set c0 = SetBitValue(c0, 15, ResultAsBool(M(qubits[33])));
            H(qubits[9]);
            H(qubits[10]);
            H(qubits[11]);
            H(qubits[12]);
            H(qubits[13]);
            H(qubits[14]);
            H(qubits[15]);
            H(qubits[16]);
            ResetAll(qubits);
        }
        return (c0);
    }
}
